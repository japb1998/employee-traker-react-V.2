{"version":3,"sources":["Nav.js","EmployeeList.js","util/API.js","Search.js","EmployeeSearch.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","useLocation","className","to","EmployeeList","props","Container","style","padding","CardDeck","results","map","employee","Col","md","sm","Card","maxHeight","overflowY","width","Img","margin","height","variant","src","picture","medium","alt","name","first","toLowerCase","Body","Title","last","ListGroup","Item","id","value","email","login","uuid","arg","newUrl","axios","get","Search","Form","Group","Label","Control","size","type","placeholder","search","onChange","handleInput","EmployeeContainer","state","filtered","loading","notFound","searchEmployee","API","then","res","setState","data","console","log","catch","err","event","target","handleSubmit","searchEmployeeByName","newSearch","filter","includes","length","this","Component","App","path","component","EmployeeSearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf0c0058.chunk.js","sourcesContent":["import {Link,useLocation} from 'react-router-dom';\nfunction Nav () {\n    const location = useLocation();\n    return (\n    <div className=\"nav-bar\">\n        <ul>\n        {/* <li className=\"nav-item\">\n        <Link to=\"/\" >\n          Home\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link to=\"/dashboard\" >\n         Dashboard\n        </Link>\n      </li> */}\n      <li className=\"nav-item\">\n        <Link to=\"/\" >\n          Employee\n        </Link>\n      </li>\n           \n        </ul>\n    </div>\n    );\n\n}\nexport default Nav;","// import {searchEmployees} from './util/API';\nimport {Card, CardGroup, CardDeck,Container, Col,ListGroup} from 'react-bootstrap';\nfunction EmployeeList(props){\n    \n    return(\n<div className=\"employee\" >\n    <Container style={{padding:'0.5rem'}}>\n<CardDeck>\n        {props.results.map((employee)=>(\n            <Col md={4} sm={6} className='card-col' key={employee.login.uuid}>\n        <Card style={{maxHeight:'20rem', overflowY: 'scroll',width: '18rem'}}className='card invisible-scrollbar' >\n        <Card.Img  style={{ margin:'0 auto', width:'15rem',height:'15rem'}}variant=\"top\" src={employee.picture.medium} alt={employee.name.first.toLowerCase()}/>\n        <Card.Body>\n        <Card.Title>{employee.name.first.toLowerCase()} {employee.name.last}</Card.Title>\n        <ListGroup variant=\"flush\">\n    <ListGroup.Item>Employee ID:{ employee.id.value}</ListGroup.Item>\n    <ListGroup.Item>email:{employee.email}</ListGroup.Item>\n  </ListGroup>\n        </Card.Body>\n        </Card>    \n        </Col>\n                ))}\n        </CardDeck>\n        </Container>\n        </div>\n    )\n}\n\nexport default EmployeeList;","import axios from 'axios';\n// const axios = require('axios');\n\nconst URL = 'https://randomuser.me/api/?results=';\n\n\nexport default {\n    searchEmployees: function (arg) {\n    let newUrl = URL+arg\nreturn axios.get(newUrl);\n}\n}","import {Form,Col,Container} from 'react-bootstrap'\nfunction Search(props) {\nreturn(\n    <div className=\"search\">\n<Container>\n<Form>\n    <Form.Group>\n        <Form.Label><h1>Search Employee</h1></Form.Label>\n        <Form.Control size=\"lg\" type=\"text\" placeholder=\"Search\" value={props.search} name=\"search\" onChange={props.handleInput}></Form.Control>\n    </Form.Group>\n</Form>\n</Container>\n</div>\n)\n};\nexport default Search","import EmployeeList from './EmployeeList';\nimport {\n    Component\n} from 'react';\nimport API from './util/API'\nimport Search from './Search';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass EmployeeContainer extends Component {\n    state = {\n        search: '',\n        results: [],\n        filtered: [],\n        loading: true,\n        notFound: false\n    }\n\n    componentDidMount() {\n        this.searchEmployee('50');\n    };\n\n    //Calls the search method from the API folder\n    searchEmployee = employee => {\n        API.searchEmployees(employee)\n            .then(res => {\n                this.setState({\n                    results: [...res.data.results],\n                    filtered: [...res.data.results],\n                    loading: false\n                });\n                console.log(this.state)\n            })\n            .catch(err => console.log(err));\n    }\n\n\n    handleInput = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({\n            [name]: value\n        });\n        this.handleSubmit()\n        \n        console.log([name], value)\n    }\n    searchEmployeeByName = name => {\n        if (name === '') {\n          return this.setState({\n            filtered: [...this.state.results],\n          });\n        };\n        const newSearch = this.state.results.filter(employee => {\n          const employeeName = employee.name.first.toLowerCase() + employee.name.last.toLowerCase()  ;\n          return employeeName.includes(name.toLowerCase());\n        });\n        if (newSearch.length) {\n          this.setState({ filtered: newSearch });\n        } else {\nthis.setState({notFound:true})\n        }\n      }\n    handleSubmit = () => {\n        // e.preventDefault();\n\n          if (this.state.search === ''){\n              return this.setState({\n                  filtered: [...this.state.results],\n              });\n          }\n        this.searchEmployeeByName(this.state.search);\n    }\n    render() {\n            return (       <div className=\"employee-container\">\n            <Search search={this.state.search} handleSubmit={this.handleSubmit} handleInput={this.handleInput}/>\n    ​\n            {this.state.loading && <div className=\"loading\"> Loading... </div>}\n    ​\n            {this.state.filtered.length && <EmployeeList results={this.state.filtered} />}\n          </div>\n        )}\n}\nexport default EmployeeContainer;","\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Nav from './Nav';\n// import Home from './Search';\n// import Dashboard from './Dashboad';\nimport EmployeeSearch from './EmployeeSearch';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Nav></Nav>\n<Route path='/' component={EmployeeSearch}></Route>  \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}